/// <reference types="node" />
/// <reference types="express" />
/// <reference types="koa" />
import { Request, Response, NextFunction } from 'express';
import { Context } from 'koa';
import { Server } from 'hapi';
import { IncomingMessage, ServerResponse } from 'http';
export declare class MiddlewareParams {
    endpoint: string;
    uri: string;
    psk: string;
    dumpTraffic: boolean;
}
export declare function makeMicroMiddleware(params: MiddlewareParams): (fn: Function) => (req: IncomingMessage, res: ServerResponse) => any;
export declare function makeExpressMiddleware(params: MiddlewareParams): (req: Request, res: Response, next: NextFunction) => void;
export declare function makeConnectMiddleware(params: MiddlewareParams): (req: any, res: any, next: any) => void;
export declare function makeKoaMiddleware(params: MiddlewareParams): (ctx: Context, next: () => Promise<any>) => Promise<any>;
export declare function instrumentHapi(server: Server, params: MiddlewareParams): void;
